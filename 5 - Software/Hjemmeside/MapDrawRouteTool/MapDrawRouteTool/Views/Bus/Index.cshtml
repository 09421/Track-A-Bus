@model dynamic
@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
<script>
    var ListOfAllBusses = new Array();
    var BussesNotOnRoute = new Array();
    var BussesOnRoute = new Array();
    function ExecuteOnLoad() {
        $.ajax({
            type: "POST",
            url: "Bus/GetRouteNames",
            dataType: "json",
            success: function (result) {
                var select = document.getElementById("route");
                select.options.length = 0;
                for (var i = 0; i < result.length; i++) {
                    select.options.add(new Option(result[i]));
                }
            }
        });
        $.ajax({
            type: "POST",
            url: "Bus/GetAllBusses",
            dataType: "json",
            success: function (result) {
                var select = document.getElementById("busses");
                select.options.length = 0;
                for (var i = 0; i < result.length; i++) {
                    select.options.add(new Option(result[i]));
                    ListOfAllBusses.push(result[i]);
                }
            }
        });

        $.ajax({
            type: "POST",
            url: "Bus/GetBussesNotOnRoute",
            dataType: "json",
            success: function (result) {
                var select = document.combo_box.ToLB;
                select.options.length = 0;
                for (var i = 0; i < result.length; i++) {
                    select.options.add(new Option(result[i]));
                    BussesNotOnRoute.push(result[i]);
                }
            }
        });


    }

    var selectedRoute;
    function Change(value) {
        selectedRoute = value;
        $.ajax({
            type: "POST",
            url: "Bus/GetBussesOnRoute",
            dataType: "json",
            data: {
                route: value,
                contentType: "application/json; charset=utf-8"
            },
            success: function (result) {
                var select = document.combo_box.FromLB;
                select.options.length = 0;
                for (var i = 0; i < result.length; i++) {
                    select.options.add(new Option(result[i]));
                }
            }
        });
    }

    function SaveChanges() {
        var allAdd = new Array();
        var allRemove = new Array();

        var selectAdd = document.combo_box.FromLB
        for (var i = 0; i < selectAdd.length; i++)
            allAdd.push(selectAdd.options[i].text)

        var selectRemove = document.combo_box.ToLB
        for (var i = 0; i < selectRemove.length; i++)
            allRemove.push(selectRemove.options[i].text)

        $.ajax({
            type: "POST",
            url: "Bus/SaveChanges",
            dataType: "json",
            traditional: true,
            data: {
                bussesToAdd: allAdd,
                route: selectedRoute,
                bussesToRemove: allRemove,
                contentType: "application/json; charset=utf-8"
            },
            success: function (result) {
                if (result == 0)
                    alert("Save Complete");
                else if (result == -1 || result == "")
                    alert("No Internet connection");
            }
        });
    }

    function RemoveBus() {
        var e = document.getElementById("Busname").value;

        if (!BussesNotOnRoute.contains(e) && ListOfAllBusses.contains(e))
            alert("Can't remove bus. Remove it from its route first");
        else {
            var elSel = document.getElementById('busses');
            var i;
            for (i = elSel.length - 1; i >= 0; i--) {
                if (elSel.options[i].selected) {
                    elSel.remove(i);
                }
            }
        }
    }

    Array.prototype.contains = function (obj) {
        var i = this.length;
        while (i--) {
            if (this[i] == obj) {
                return true;
            }
        }
        return false;
    }

    function AddNewBus() {
        var busname = document.getElementById("Busname").value;

        for (var i = 0; i < document.getElementById("busses").options.length; i++) {
            if (document.getElementById("busses").options[i].value == busname) {
                alert("Bus already exist")
                return 0;
            }
        }

        if (ListOfAllBusses.contains(busname))
            alert("Bus already exist");
        else{            
            document.getElementById("busses").options.add(new Option(busname));            
        }
    }

    function RenameBus() {

        var e = document.getElementById("busses");
        var sbus = e.options[e.selectedIndex].text = document.getElementById("Busname").value;
    }

    function SaveBusses() {

        var BussesInList = new Array();
        for (var i = 0; i < document.getElementById("busses").options.length; i++) {
            BussesInList.push(document.getElementById("busses").options[i].value);
        }

        $.ajax({
            type: "POST",
            url: "Bus/SaveBusChanges",
            traditional: true,
            data: {
                NewBusList: BussesInList,
                AllBusses: ListOfAllBusses
            },
            success: function(result) {
                if (result == "" || result == -3)
                    alert("No Internet connection");
                else if (result == -1)
                    alert("Failed to save, please try again");
                else {
                    alert("Save Success");
                    document.getElementById('ToLB').options.length = 0;

                    for (var i = 0; i < ListOfAllBusses.length; i++) {
                        if (!BussesNotOnRoute.contains(ListOfAllBusses[i])) {
                            BussesOnRoute.push(ListOfAllBusses[i])
                        }
                    }

                    for (var i = 0; i < document.getElementById('busses').options.length; i++) {
                        if (!BussesOnRoute.contains(document.getElementById('busses').options[i].value)) {

                            document.getElementById('ToLB').options.add(new Option(document.getElementById('busses').options[i].value));
                        }
                    }
                }
            }
        });
    }

    function SetSelectedBus(name) {
        document.getElementById("Busname").value = name;
    }

    var arrFrom = new Array();
    var arrTo = new Array();
    var arrLU = new Array();
    function move(tbFrom, tbTo) {
        arrFrom = new Array();
        arrTo = new Array();
        arrLU = new Array();
        var i;
        for (i = 0; i < tbTo.options.length; i++) {
            arrLU[tbTo.options[i].text] = tbTo.options[i].value;
            arrTo[i] = tbTo.options[i].text;
        }
        var fLength = 0;
        var tLength = arrTo.length;
        for (i = 0; i < tbFrom.options.length; i++) {
            arrLU[tbFrom.options[i].text] = tbFrom.options[i].value;
            if (tbFrom.options[i].selected && tbFrom.options[i].value != "") {
                arrTo[tLength] = tbFrom.options[i].text;
                tLength++;
            }
            else {
                arrFrom[fLength] = tbFrom.options[i].text;
                fLength++;
            }
        }

        tbFrom.length = 0;
        tbTo.length = 0;
        var ii;

        for (ii = 0; ii < arrFrom.length; ii++) {
            var no = new Option();
            no.value = arrLU[arrFrom[ii]];
            no.text = arrFrom[ii];
            tbFrom[ii] = no;
        }

        for (ii = 0; ii < arrTo.length; ii++) {
            var no = new Option();
            no.value = arrLU[arrTo[ii]];
            no.text = arrTo[ii];
            tbTo[ii] = no;
        }
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>

<div>
    <p style="margin: 10px; height: 100%; width: 100%" class="site-title">Welcome to the bus editor</p>
</div>

<section style="float: left; width: 45%; height: 70%; text-align: left; border: groove; margin: 10px;">
    <select id="route" multiple size="8" name="Routes" style="width: 450px" onchange="Change(this.value);">
    </select>
    <form name="combo_box">
        <table>
            <tr>
                <td>
                    <h4 style="color: ghostwhite;">Busses on route</h4>
                    <select multiple size="10" name="FromLB" style="width: 200px">
                    </select>
                </td>
                <td>
                    <input type="button" onclick="move(this.form.FromLB, this.form.ToLB)"
                        value="->"><br />
                    <input type="button" onclick="move(this.form.ToLB, this.form.FromLB)"
                        value="<-">
                </td>
                <td>
                    <h4 style="color: ghostwhite;">Avaliable busses</h4>
                    <select multiple size="10" name="ToLB" style="width: 200px" id="ToLB">
                    </select>
                </td>
            </tr>
        </table>
        <input id="SaveRoute" type="button" value="Save" onclick="SaveChanges();" style="float: initial;" />
    </form>
</section>

<section style="float: right; width: 50%; height: 70%; text-align: left; border: groove; margin: 10px;">
    <h3 style="color: ghostwhite;">Create/Delete bus</h3>
    <form name="Bus_box">
        <select id="busses" multiple size="10" name="busses" style="width: 170px" onchange="SetSelectedBus(this.value);">
        </select>
        <p style="color: ghostwhite;">
            Bus ID:
            <input type="text" name="Busname" style="width: 100px" id="Busname" onkeypress="return isNumberKey(event)">
        </p>
        <p>
            <input type="button" value="Add" style="width: 80px" onclick="AddNewBus();" />
            <input type="button" value="Remove" style="width: 80px" onclick="RemoveBus();" />
            <input type="button" value="Rename" style="width: 80px" onclick="RenameBus();" />
        </p>
        <input type="button" value="Save" style="width: 70px" onclick="SaveBusses();" />
    </form>
</section>
