@model dynamic
@{
    ViewBag.Title = "title";
}

<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
      <style type="text/css">
          html { height: 100% }
          body { height: 100%; margin: 0; padding: 0 }
          #map-canvas { height: 100% }
      </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script>
        var map;
        var directionsDisplay;
        var directionsService;
        var stepDisplay;
        var markerArray = [];

        function initialize() {
            // Instantiate a directions service.

            var featureOpts = [{
                    featureType: 'poi',
                    stylers: [
                        { visibility: 'off' }]
                }
            ];

            //Creates the DirectionsService
            directionsService = new google.maps.DirectionsService();

            // Create a map and center it on Aarhus.
            var Aarhus = new google.maps.LatLng(56.155955, 10.205011);            
            var mapOptions = {
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                center: Aarhus,
                streetViewControl: false,
                styles: featureOpts
            };
            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

            // Create a renderer for directions and bind it to the map.
            var rendererOptions = {
                map: map,
                draggable: true
            };
            directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
            
            //Sets the mapto use the TransitLayer
            var transitLayer = new google.maps.TransitLayer();
            transitLayer.setMap(map);

            
            google.maps.event.addListener(directionsDisplay, 'directions_changed', function () {
                var that = this;
                setTimeout(function () {//we need a short delay
                    for (var k in that) {//iterate over all properties
                        if (typeof that[k].markers != 'undefined') {//find the desired property
                            var markers = that[k].markers, arr = [];
                            for (var i = 0; i < markers.length; ++i) {//collect the data
                                arr.push(markers[i].position);
                            };
                        }
                    }
                    temp = that.directions.routes;
                }, 100)
            });


            google.maps.event.addListener(map, 'click', function (event) {
                if (startPoint.length == endPoint.length)
                    startPoint.push(new google.maps.Marker({
                        map: map,
                        draggable: true,
                        position: event.latLng
                    }));
                else {
                    endPoint.push(new google.maps.Marker({
                        map: map,
                        draggable: true,
                        position: event.latLng
                    }));
                    calcRoute();
                    ClearMarkers();
                }
            });

            function ClearMarkers() {
                for (var i = 0; i < startPoint.length; i++)
                    startPoint[i].setMap(null);

                for (var i = 0; i < endPoint.length; i++)
                    endPoint[i].setMap(null);
            }

            var startPoint = [];
            var endPoint = [];
            function calcRoute() {
                var start = startPoint[startPoint.length - 1].position;
                var end = endPoint[endPoint.length - 1].position;

                request = {
                    origin: start,
                    destination: end,
                    travelMode: google.maps.TravelMode.DRIVING
                };
                directionsService.route(request, function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        route = response.routes[0];
                        directionsDisplay.setDirections(response);
                    }
                });
            }

            function calcRouteWithWayPoints(ar) {
                debugger;
                var start = startPoint[startPoint.length - 1].position;
                var end = endPoint[endPoint.length - 1].position;
                var wayp = ar;
                request = {
                    origin: start,
                    destination: end,
                    waypoints: wayp,
                    travelMode: google.maps.TravelMode.DRIVING
                };
                directionsService.route(request, function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        route = response.routes[0];
                        directionsDisplay.setDirections(response);
                    }
                });
            }
        }

        function getRoutePath() {
            DirectionsArray = [];
            if (temp != null) {
                temp.forEach(function (t) {
                    t.legs.forEach(function (leg) {
                        leg.steps.forEach(function (step) {
                            step.path.forEach(function (path) {
                                DirectionsArray.push(path);
                            });
                        });
                    });
                });
            }
        }

        function returnPathCoord() {
            if (DirectionsArray != null) {
                getRoutePath();
                var str = DirectionsArray.toString();
                //alert(DirectionsArray.length.toString());
                $.post("Dir/Save", { s: str });
            }
        }

        var route = null;
        var temp;
        var DirectionsArray = new Array();
        google.maps.event.addDomListener(window, 'load', initialize);
        
    </script>
  </head>
    <body>
        <td>
           <input id="clickMe" type="button" value="Save route" onclick="returnPathCoord();" />
        </td>
        <div id="map-canvas"/>
    </body>
</html>
